<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:parsley="http://www.spicefactory.org/parsley"
		 width="700" height="500" enabled="true" title="Algomi Test">
	<fx:Script>
		<![CDATA[
			import com.flexproject.events.FlexProjectPMEvents;
			import com.flexproject.interfaces.IFlexProjectPM;
			import com.flexproject.model.FlexProjectPM;
			
			import mx.controls.Alert;
			
			import org.spicefactory.parsley.core.context.Context;
			
			[Inject]
			public var context:Context;
			
			[Inject (id="projectPM")]
			[Bindable]
			public var projectPM:IFlexProjectPM;
			
			public var timer:Timer;
			
			[Bindable] 
			private var sec:int = 0;
			[Bindable] 
			private var min:int = 0;
			[Bindable] 
			private var hour:int = 0;
			
			private const TIMER_INTERVAL:int = 50;
			private var timerAtStart:int = 0;	
			
			[Bindable] 
			private var firstTime:String = "";	
			[Bindable] 
			private var lastTime:String = "";	
			
			private function updateTimer( evt:TimerEvent ):void{
				var d:Date = new Date( getTimer() - timerAtStart );
				min = d.minutes;
				sec = d.seconds;
				hour = d.hours;
			}		
			
			[Init]
			public function init() : void 
			{
				projectPM.init(); //init arrayCollections
				
				timer = new Timer(TIMER_INTERVAL);
				timer.addEventListener( TimerEvent.TIMER, updateTimer );
			}
			
			[MessageHandler(selector="UpdateListEvent")]//To show the use of parsley events
			public function updateHandler(event:FlexProjectPMEvents):void
			{
				var timestamp:String=event.data.toString();
				if(firstTime=="")
				{
					firstTime=timestamp;
					lastTime=timestamp;
				}
				else
					lastTime=timestamp
			}
			
			[MessageHandler(selector="ErrorListEvent")]
			public function errorHandler(event:FlexProjectPMEvents):void
			{
				Alert.show(event.data.faultString); //To show the use of parsley events
			}
			
			protected function startFeed_clickHandler(event:MouseEvent):void
			{
				firstTime="";
				lastTime="";
				projectPM.startFeed(); // start feed after button clicking
				startStop.text="Started: ";
				timerAtStart = getTimer();
				timer.start()
			}
			
			protected function stopFeed_clickHandler(event:MouseEvent):void
			{
				projectPM.stopFeed(); // stop feed after button clicking
				startStop.text="Stoped: ";
				timer.stop();
				
			}

			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<parsley:Configure/>
	</fx:Declarations>
	
	<s:layout>
		<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle">
		</s:HorizontalLayout>
	</s:layout>
	
	<s:VGroup width="100%" height="100%" verticalAlign="middle" horizontalAlign="left" paddingBottom="16" paddingTop="16" paddingLeft="16" paddingRight="16">
		<s:Label styleName="myLabel" text="Click 'Start' to start feed"/>
		<s:HGroup width="100%">
			<s:Button label="Start" click="startFeed_clickHandler(event)" styleName="pushButton"/>
			<s:Button label="Stop" click="stopFeed_clickHandler(event)" styleName="pushButton"/>
			<s:Label styleName="myLabel" id="startStop" text="Stopped"/>
			<s:Label styleName="myLabel" id="timerLbl" text="{hour+':'+min+':'+sec}"/>
			
			<s:VGroup width="100%" horizontalAlign="right">
				<s:Label styleName="myLabel" id="startTime" text="{'First Time: '+firstTime}" minWidth="120"/>
				<s:Label styleName="myLabel" id="LastTime" text="{'Last Time: '+lastTime}" minWidth="120"/>
			</s:VGroup>
		</s:HGroup>

		<s:DataGrid width="100%" height="100%" dataProvider="{projectPM.filteredList}">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn dataField="name" headerText="Country Name"/>
					<s:GridColumn dataField="hits" headerText="Hits"/>
				</s:ArrayList>	
			</s:columns>
		</s:DataGrid>
	</s:VGroup>
</s:Panel>
